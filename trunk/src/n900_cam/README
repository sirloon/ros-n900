Trying to use gscam from Brown robotics. This is a generic webcam driver
based on GStreamer, meaning all camera supporting v4l are supported,
including N900's.

    http://code.google.com/p/brown-ros-pkg/wiki/gscam


Installing gscam on N900
------------------------

 * Prerequisites:
   ~~~~~~~~~~~~~~

   Make sure extra-devel and sdk repository are enabled.

   $ apt-get install gstreamer-tools

   Test GStreamer installation, following maemo thread
   http://talk.maemo.org/showthread.php?p=566136#post566136

   On N900:

   # front camera is /dev/video1, back camera is /dev/video0
   # 192.168.2.14 is computer's IP address, use broadcast address for all computers
   $ gst-launch v4l2src device=/dev/video1 ! videoscale ! video/x-raw-yuv,width=320,height=240 ! ffmpegcolorspace ! smokeenc ! udpsink host=192.168.2.14 port=1234

   On computer:

   $ gst-launch-0.10 udpsrc port=1234 ! smokedec ! autovideosink


   Can you see this little window with your face ?
   
   OK, now install GStreamer dev files.
   
   On N900:
   $ apt-get install libgstreamer0.10-dev

   Note: most deb packages aren't optified, they may eat some more rootfs...
   

 * ROS package:
   ~~~~~~~~~~~~

   $ roscd
   $ mkdir brown-ros-pkg
   $ cd brown-ros-pkg
   $ svn co -r 682 http://brown-ros-pkg.googlecode.com/svn/trunk/unstable/gscam gscam
   $ roscd gscam
   $ rosmake


Installing OpenCV
-----------------

(on computer)

Download OpenCV from Willow Garage and install:

$ http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/2.1/OpenCV-2.1.0.tar.bz2
$ tar xjfv OpenCV-2.1.0.tar.bz2
$ cd OpenCV-2.1.0
$ cmake .
$ make
$ make install

Running gscam node
------------------

On computer:

$ roscore 
# in another term
$ rostopic echo /gscam/image_raw

On N900:

$ roscd gscam
$ cd bin
$ export GSCAM_CONFIG="v4l2src device=/dev/video0 ! videoscale ! video/x-raw-yuv,width=320,height=240 ! ffmpegcolorspace ! video/x-raw-rgb ! identity name=ros ! fakesink"
$ rosrun gscam gscam

At this time, you should be able to see a bunch of chars on rostopic terminal: an image has been sent from N900 camera to 
the computer.


Using cv_bridge to link ROS and OpenCV
--------------------------------------

On computer:

$ roscd cv_bridge
$ rosmake
$ import conf # conf.py sets several variables, including path to find ROS cv_bridge python libs
$ import cv_bridge # ok, you can access libs

From http://www.ros.org/wiki/cv_bridge/Tutorials/UsingCvBridgeToConvertBetweenROSImagesAndOpenCVImages, let's create a 
ROS node with python. It's in nodes/testcam.py...

$ rosrun n900-cam testcam.py


You should get a window with images coming from N900 (gscam node).


Having fun with face detection
------------------------------

gscam node is running on N900. On computer:

$ rosrun n900-cam facedetect.py

You should get a window with video, a red rectangle may surround your face :)
Careful: dirty script, it requires OpenCV 2.1 to be installed in "/usr/local/python2.6/site-packages"
         this is the case when installed following instructions at the beginning.


